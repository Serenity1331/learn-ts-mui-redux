{"version":3,"sources":["routes.ts","action-creators/index.ts","pages/LoginPage.tsx","images/Excalibur.png","pages/ProfilePage.tsx","action-creators/postData.ts","App.tsx","reportWebVitals.ts","reducers/errorsReducer.ts","reducers/isEditableReducer.ts","reducers/loginFormReducer.ts","reducers/userReducer.ts","reducers/index.ts","index.tsx"],"names":["routes","setLogin","payload","dispatch","type","setPassword","setLoginError","setPasswordError","toggleEditMode","editProfile","isEmptyOrSpaces","str","indexOf","LoginPage","history","useHistory","useDispatch","bindActionCreators","actionCreators","login","useSelector","state","loginForm","loginError","errors","password","passwordError","className","noValidate","autoComplete","onSubmit","e","preventDefault","length","test","push","handleSubmit","TextField","error","value","onChange","target","label","variant","color","size","margin","required","Button","sx","mt","ProfilePage","isEditable","userData","btnTitle","console","log","toggleEditFields","React","useCallback","clickHandler","name","AppBar","fontSize","onClick","Grid","container","justifyContent","alignItems","pt","item","src","lady","alt","height","mb","minWidth","loadComplete","users","email","website","phone","username","width","disabled","showTextFields","Typography","object","method","body","JSON","stringify","headers","theme","createTheme","palette","secondary","main","indigo","text","primary","mode","components","MuiOutlinedInput","styleOverrides","notchedOutline","borderColor","MuiAppBar","defaultProps","enableColorOnDark","root","flexDirection","padding","backgroundColor","MuiButton","textTransform","App","useEffect","url","fetch","then","response","json","addUsersSuccess","catch","addUsersFailure","message","ThemeProvider","component","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","errorsReducer","action","isEditableReducer","loginFormReducer","userReducer","allReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ec48fb7.chunk.js","sourcesContent":["export const routes = {\n    loginPage: '/learn-ts-mui-redux/',\n    profilePage: '/learn-ts-mui-redux/profile'\n}","import { Dispatch } from \"redux\"\n\nexport const setLogin = (payload: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch({\n            type: 'SET_LOGIN',\n            payload\n        })\n    }\n}\n\nexport const setPassword = (payload: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch({\n            type: 'SET_PASSWORD',\n            payload\n        })\n    }\n}\n\nexport const setLoginError = (payload: boolean) => {\n    return (dispatch: Dispatch) => {\n        dispatch({\n            type: 'SET_LOGIN_ERROR',\n            payload\n        })\n    }\n}\n\nexport const setPasswordError = (payload: boolean) => {\n    return (dispatch: Dispatch) => {\n        dispatch({\n            type: 'SET_PASSWORD_ERROR',\n            payload\n        })\n    }\n}\n\nexport const toggleEditMode = () => {\n    return (dispatch: Dispatch) => {\n        dispatch({\n            type: 'TOGGLE_EDIT_MODE'\n        })\n    }\n}\n\nexport const editProfile = (payload: { [x: string]: string }) => {\n    return (dispatch: Dispatch) => {\n        dispatch({\n            type: 'EDIT_PROFILE',\n            payload\n        })\n    }\n}","import React from 'react'\nimport { Button, TextField } from '@mui/material'\nimport { useHistory } from 'react-router-dom';\nimport { routes } from '../routes';\nimport type { FormEvent } from 'react'\nimport { RootStateOrAny, useSelector, useDispatch} from 'react-redux'\nimport * as actionCreators from '../action-creators/index'\nimport { bindActionCreators } from 'redux';\n\nfunction hasDigits(str: string) {\n    return /\\d/.test(str);\n}\n\nfunction isEmptyOrSpaces(str: string): boolean {\n    return !str || str.indexOf(' ') >= 0\n}\n\nconst LoginPage: React.FC = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { setLogin, setPassword, setLoginError, setPasswordError } = bindActionCreators(actionCreators, dispatch)\n    const login = useSelector((state: RootStateOrAny) => state.loginForm.login);\n    const loginError = useSelector((state: RootStateOrAny) => state.errors.login);\n    const password = useSelector((state: RootStateOrAny) => state.loginForm.password);\n    const passwordError = useSelector((state: RootStateOrAny) => state.errors.password);\n    \n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setLoginError(false)\n        setPasswordError(false);\n\n        if (isEmptyOrSpaces(login)) {\n            setLoginError(true)\n        } else if (isEmptyOrSpaces(password) || password.length < 8 || !hasDigits(password)) {\n            setPasswordError(true)\n        } else {\n            history.push(routes.profilePage)\n        }\n      }\n\n    return (\n        <div className=\"login-page__main\">\n            <div className=\"login-page__container-main\">\n                <form noValidate autoComplete=\"off\" className=\"login-page__form\" onSubmit={(e: FormEvent<HTMLFormElement>) => handleSubmit(e)}>\n                    <TextField error={loginError} value={login} onChange={(e) => setLogin(e.target.value)} label=\"Login\" variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"dense\" required />\n                    <TextField type=\"password\" error={passwordError} value={password} onChange={(e) => setPassword(e.target.value)} label=\"Password\" variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"dense\" required />\n                    <Button className=\"login-page__btn\" sx={{ mt: 2 }} type=\"submit\" variant=\"contained\" color=\"secondary\">Login</Button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginPage\n","export default __webpack_public_path__ + \"static/media/Excalibur.b38d1984.png\";","import React from 'react'\nimport { Button, TextField, Typography, AppBar, Grid } from '@mui/material'\nimport { useHistory } from 'react-router-dom';\nimport { routes } from '../routes';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport { RootStateOrAny, useSelector, useDispatch} from 'react-redux'\nimport * as actionCreators from '../action-creators/index'\nimport { bindActionCreators } from 'redux';\nimport lady from '../images/Excalibur.png'\n\nconst ProfilePage: React.FC = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { toggleEditMode, editProfile } = bindActionCreators(actionCreators, dispatch);\n    const isEditable = useSelector((state: RootStateOrAny) => state.isEditable)\n    const userData = useSelector((state: RootStateOrAny) => state.userData)\n    let btnTitle = isEditable ? 'Finish Editing' : 'Edit'\n    console.log(userData)\n    \n    const toggleEditFields = React.useCallback(() => toggleEditMode(), [toggleEditMode])\n    const clickHandler = React.useCallback(() => history.push(routes.loginPage), [history])\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        editProfile({[e.target.name]: e.target.value })\n    }, [editProfile])\n\n    const showTextFields = () => {\n        const { name, email, website, phone, username } = userData.users;\n        return (\n            <>\n                <TextField sx={{ width: '220px'}} value={name} type='text' className=\"profile-page__field\" label='Name' name='name' disabled={!isEditable} onChange={onChange} variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"normal\"/>\n                <TextField sx={{ width: '220px'}} value={username} type='text' className=\"profile-page__field\" label='Username' name='username' disabled={!isEditable} onChange={onChange} variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"normal\"/>\n                <TextField sx={{ width: '220px'}} value={phone} type='text' className=\"profile-page__field\" label='Phone' name='phone' disabled={!isEditable} onChange={onChange} variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"normal\"/>\n                <TextField sx={{ width: '220px'}} value={email} type='text' className=\"profile-page__field\" label='Email' name='email' disabled={!isEditable} onChange={onChange} variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"normal\"/>\n                <TextField sx={{ width: '220px'}} value={website} type='text' className=\"profile-page__field\" label='Website' name='website' disabled={!isEditable} onChange={onChange} variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"normal\"/>\n            </>\n        )\n    }\n\n    return (\n        <div className=\"profile-page__container-main\">\n            <AppBar>\n                <AccountBoxIcon fontSize=\"large\" sx={{ color:'#ababc1'}} />\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\" onClick={clickHandler}>Logout</Button>\n            </AppBar>\n            <main className=\"profile-page__main\">\n                <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{pt: 10}}>\n                    <Grid item >\n                        <img src={lady} alt=\"Lady\" height='500' />\n                    </Grid>\n                    <Grid item>\n                        <form noValidate autoComplete=\"off\" className=\"profile-page__form\">\n                            <Button sx={{ mb: 2, minWidth: '100px', fontSize: '16px'}} onClick={toggleEditFields} variant=\"contained\" color=\"secondary\">{ btnTitle }</Button>\n                            { userData.loadComplete ? showTextFields() : <Typography variant=\"h5\" sx={{ color: 'white' }}>Error. Could not load any data</Typography>}\n                        </form>\n                    </Grid>\n                </Grid>\n            </main>\n        </div>\n    )\n}\n\nexport default ProfilePage\n","import { Dispatch } from \"redux\"\n\nexport const addUsersSuccess = (users: object) => {\n    return {\n            type: 'POST_USERS_SUCCESS',\n            payload: users\n        }\n}\n\nexport const addUsersFailure = (error: any) => {\n    return {\n        type: 'POST_USERS_FAILURE',\n        payload: error\n    }\n}\n\nconst object = {\n    method: 'POST',\n    body: JSON.stringify({\n        name: 'Jennifer',\n        username: 'Excalibur',\n        phone: '1-666-11-22',\n        email: 'yahoo@yahoo.com',\n        website: 'yahoo.com'\n    }),\n    headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n    }\n}\n\nexport const postData = (url: string) => (dispatch: Dispatch) => {\n    fetch(url, object)\n        .then(response => response.json())\n        .then(users => {\n            dispatch(addUsersSuccess(users))\n            console.log(users)\n        })\n        .catch(error => dispatch(addUsersFailure(error.message)))\n}\n\n","import React, { useEffect } from 'react';\nimport \"./reset.css\";\nimport \"./App.styles.scss\";\nimport { createTheme } from '@mui/material/styles';\nimport { indigo } from '@mui/material/colors';\nimport { ThemeProvider } from '@mui/material';\nimport { BrowserRouter, Route } from 'react-router-dom'; \nimport LoginPage from './pages/LoginPage';\nimport ProfilePage from './pages/ProfilePage';\nimport { useDispatch} from 'react-redux'\nimport { fetchData } from './action-creators/fetchData';\nimport { postData } from './action-creators/postData';\n\nconst theme = createTheme({\n  palette: {\n    secondary: {\n      main: indigo[500],\n    },\n    text: {\n      primary: '#cacbd2',\n    },\n    mode: 'dark',\n  },\n  components: {\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          borderColor: '#3f51b5',\n        }\n      }\n    },\n    MuiAppBar: {\n      defaultProps: {\n        enableColorOnDark: true,\n      },\n      styleOverrides: {\n        root: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: '10px',\n          height: '60px',\n          backgroundColor: '#0e114e'\n        }\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none'\n        }\n      }\n    }\n  },\n});\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // const jsonplaceholderUrl = 'https://jsonplaceholder.typicode.com/users/1';\n    const localUrl = 'http://localhost:3000/user';\n      // dispatch(fetchData(localUrl))\n      dispatch(postData(localUrl))\n  }, [])\n  \n  return (\n    <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <div className=\"App\">\n            <Route component={LoginPage} path=\"/learn-ts-mui-redux/\" exact />\n            <Route component={ProfilePage} path=\"/learn-ts-mui-redux/profile\" exact />\n          </div>\n        </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Action } from \"../interfaces\"\n\nconst initialState = {\n    login: false,\n    password: false\n}\n\nconst errorsReducer = (state = initialState, action : Action) => {\n    switch(action.type) {\n        case 'SET_LOGIN_ERROR':\n            return {\n                ...state,\n                login: action.payload\n            }\n        case 'SET_PASSWORD_ERROR':\n            return {\n                ...state,\n                password: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default errorsReducer;","import { Action } from \"../interfaces\"\n\nconst isEditableReducer = (state = false, action : Action) => {\n    switch(action.type) {\n        case 'TOGGLE_EDIT_MODE':\n            return !state\n        default:\n            return state\n    }\n}\n\nexport default isEditableReducer;","import { Action } from \"../interfaces\"\n\nconst initialState = {\n    login: '',\n    password: '',\n}\n\nconst loginFormReducer = (state = initialState, action : Action) => {\n    switch(action.type) {\n        case 'SET_LOGIN':\n            return {\n                ...state,\n                login: action.payload\n            }\n        case 'SET_PASSWORD':\n            return {\n                ...state,\n                password: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default loginFormReducer;","\nconst initialState = {\n    loadComplete: false,\n    users: {},\n}\n\nconst userReducer = (state = initialState, action : any) => {\n    switch(action.type) {\n        case 'FETCH_USERS_SUCCESS':\n            return {\n                loadComplete: true,\n                users: action.payload,\n            }\n        case 'FETCH_USERS_FAILURE':\n            return {\n                loadComplete: false,\n                error: action.payload\n            }\n        case 'POST_USERS_SUCCESS':\n            return {\n                loadComplete: true,\n                users: action.payload,\n            }\n        case 'POST_USERS_FAILURE':\n            return {\n                loadComplete: false,\n                error: action.payload\n            }\n        case 'EDIT_PROFILE':\n            return {\n                loadComplete: true,\n                users: {...state.users, ...action.payload}\n            }\n        default:\n            return state\n    }\n}\n\nexport default userReducer;","import { combineReducers } from 'redux'\nimport errorsReducer from './errorsReducer';\nimport isEditableReducer from './isEditableReducer';\nimport loginFormReducer from './loginFormReducer';\nimport userReducer from './userReducer';\n\nconst allReducers = combineReducers({\n    loginForm: loginFormReducer,\n    errors: errorsReducer,\n    isEditable: isEditableReducer,\n    userData: userReducer\n})\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport allReducers from './reducers/index'\n\nconst store = createStore(allReducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}