{"version":3,"sources":["assets/styles/theme.ts","assets/fonts/crimefighter-bb.regular.ttf","routes.ts","action-creators/index.ts","pages/LoginPage.tsx","assets/images/Excalibur.png","pages/ProfilePage.tsx","action-creators/postData.ts","App.tsx","action-creators/fetchData.ts","reportWebVitals.ts","reducers/errorsReducer.ts","reducers/isEditableReducer.ts","reducers/loginFormReducer.ts","reducers/userReducer.ts","reducers/index.ts","index.tsx"],"names":["fontName","fontWeight","fontUrl","theme","createTheme","palette","secondary","main","indigo","text","primary","mode","typography","fontFamily","join","components","MuiCssBaseline","styleOverrides","CrimeFighter","MuiOutlinedInput","notchedOutline","borderColor","MuiAppBar","defaultProps","enableColorOnDark","root","flexDirection","justifyContent","alignItems","padding","height","backgroundColor","MuiButton","textTransform","routes","setLogin","payload","dispatch","type","setPassword","setLoginError","setPasswordError","toggleEditMode","editProfile","isEmptyOrSpaces","str","indexOf","LoginPage","history","useHistory","useDispatch","bindActionCreators","actionCreators","login","useSelector","state","loginForm","loginError","errors","password","passwordError","className","noValidate","autoComplete","onSubmit","e","preventDefault","length","test","push","handleSubmit","TextField","error","value","onChange","target","label","variant","color","size","margin","required","Button","sx","mt","ProfilePage","isEditable","userData","btnTitle","editAndSaveData","url","body","users","fetch","method","JSON","stringify","headers","then","response","json","addUsersSuccess","console","log","catch","addUsersFailure","message","clickHandler","React","useCallback","name","AppBar","fontSize","onClick","Grid","container","pt","item","src","lady","alt","mb","minWidth","loadComplete","email","website","phone","username","width","disabled","showTextFields","Typography","App","useEffect","fetchUsersSuccess","fetchUsersFailure","ThemeProvider","CssBaseline","component","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","errorsReducer","action","isEditableReducer","loginFormReducer","userReducer","allReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sdAIoBA,EAAkBC,EAAoBC,E,kECJ3C,MAA0B,oDDc5BC,EAAQC,YAAY,CAC7BC,QAAS,CACPC,UAAW,CACTC,KAAMC,IAAO,MAEfC,KAAM,CACJC,QAAS,WAEXC,KAAM,QAERC,WAAY,CACVC,WAAY,CAAC,gBAAgBC,KAAK,MAEpCC,WAAY,CACVC,eAAgB,CACdC,eAAe,aAAD,QAzBFjB,EA0BC,eA1BiBC,EA0BD,IA1BqBC,EA0BhBgB,EA1BvB,6CAEAlB,EAFA,iFAKAC,EALA,6BAMFD,EANE,kBAMgBE,EANhB,oMAyBG,eAIhBiB,iBAAkB,CAChBF,eAAgB,CACdG,eAAgB,CACdC,YAAa,aAInBC,UAAW,CACTC,aAAc,CACZC,mBAAmB,GAErBP,eAAgB,CACdQ,KAAM,CACJC,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,OACTC,OAAQ,OACRC,gBAAiB,aAIvBC,UAAW,CACTf,eAAgB,CACdQ,KAAM,CACJQ,cAAe,a,oDE1DdC,EACE,uBADFA,EAEI,8B,QCAJC,EAAW,SAACC,GACrB,OAAO,SAACC,GACJA,EAAS,CACLC,KAAM,YACNF,cAKCG,EAAc,SAACH,GACxB,OAAO,SAACC,GACJA,EAAS,CACLC,KAAM,eACNF,cAKCI,EAAgB,SAACJ,GAC1B,OAAO,SAACC,GACJA,EAAS,CACLC,KAAM,kBACNF,cAKCK,EAAmB,SAACL,GAC7B,OAAO,SAACC,GACJA,EAAS,CACLC,KAAM,qBACNF,cAKCM,EAAiB,WAC1B,OAAO,SAACL,GACJA,EAAS,CACLC,KAAM,uBAKLK,EAAc,SAACP,GACxB,OAAO,SAACC,GACJA,EAAS,CACLC,KAAM,eACNF,c,eCrCZ,SAASQ,EAAgBC,GACrB,OAAQA,GAAOA,EAAIC,QAAQ,MAAQ,EAGvC,IAoCeC,EApCa,WACxB,IAAMC,EAAUC,cACVZ,EAAWa,cACjB,EAAmEC,YAAmBC,EAAgBf,GAA9FF,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,cAAeC,EAA9C,EAA8CA,iBACxCY,EAAQC,aAAY,SAACC,GAAD,OAA2BA,EAAMC,UAAUH,SAC/DI,EAAaH,aAAY,SAACC,GAAD,OAA2BA,EAAMG,OAAOL,SACjEM,EAAWL,aAAY,SAACC,GAAD,OAA2BA,EAAMC,UAAUG,YAClEC,EAAgBN,aAAY,SAACC,GAAD,OAA2BA,EAAMG,OAAOC,YAgB1E,OACI,qBAAKE,UAAU,mBAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,uBAAMC,YAAU,EAACC,aAAa,MAAMF,UAAU,mBAAmBG,SAAU,SAACC,GAAD,OAjBlE,SAACA,GAClBA,EAAEC,iBACF1B,GAAc,GACdC,GAAiB,GAEbG,EAAgBS,GAChBb,GAAc,GACPI,EAAgBe,IAAaA,EAASQ,OAAS,IAvBvD,KAAKC,KAuBkET,GACtElB,GAAiB,GAEjBO,EAAQqB,KAAKnC,GAOqGoC,CAAaL,IAA3H,UACI,cAACM,EAAA,EAAD,CAAWC,MAAOf,EAAYgB,MAAOpB,EAAOqB,SAAU,SAACT,GAAD,OAAO9B,EAAS8B,EAAEU,OAAOF,QAAQG,MAAM,QAAQC,QAAQ,WAAWC,MAAM,YAAYC,KAAK,QAAQC,OAAO,QAAQC,UAAQ,IAC9K,cAACV,EAAA,EAAD,CAAWjC,KAAK,WAAWkC,MAAOZ,EAAea,MAAOd,EAAUe,SAAU,SAACT,GAAD,OAAO1B,EAAY0B,EAAEU,OAAOF,QAAQG,MAAM,WAAWC,QAAQ,WAAWC,MAAM,YAAYC,KAAK,QAAQC,OAAO,QAAQC,UAAQ,IAC1M,cAACC,EAAA,EAAD,CAAQrB,UAAU,kBAAkBsB,GAAI,CAAEC,GAAI,GAAK9C,KAAK,SAASuC,QAAQ,YAAYC,MAAM,YAA3F,2B,mDC9CL,MAA0B,sCCoE1BO,EAzDe,WAC1B,IAAMrC,EAAUC,cACVZ,EAAWa,cACjB,EAAwCC,YAAmBC,EAAgBf,GAAnEK,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,YAClB2C,EAAahC,aAAY,SAACC,GAAD,OAA2BA,EAAM+B,cAC1DC,EAAWjC,aAAY,SAACC,GAAD,OAA2BA,EAAMgC,YAC1DC,EAAWF,EAAa,iBAAmB,OAEzCG,EAAkB,WCHJ,IAACC,EAAaC,EDI9BjD,IAEiB,mBAAb8C,GACAnD,GCPaqD,EDOK,6BCPQC,EDOsBJ,EAASK,MCPd,SAACvD,GACpDwD,MAAMH,EAAK,CACPI,OAAQ,OACRH,KAAMI,KAAKC,UAAUL,GACrBM,QAAS,CACL,eAAgB,qCAGnBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAN,GACFvD,EAxBmB,SAACuD,GAC5B,MAAO,CACCtD,KAAM,qBACNF,QAASwD,GAqBAS,CAAgBT,IACzBU,QAAQC,IAAIX,MAEfY,OAAM,SAAAhC,GAAK,OAAInC,EApBO,SAACmC,GAC5B,MAAO,CACHlC,KAAM,qBACNF,QAASoC,GAiBgBiC,CAAgBjC,EAAMkC,iBDF7CC,EAAeC,IAAMC,aAAY,kBAAM7D,EAAQqB,KAAKnC,KAAmB,CAACc,IACxE0B,EAAWkC,IAAMC,aAAY,SAAC5C,GAChCtB,EAAY,eAAEsB,EAAEU,OAAOmC,KAAO7C,EAAEU,OAAOF,UACxC,CAAC9B,IAeJ,OACI,sBAAKkB,UAAU,+BAAf,UACI,eAACkD,EAAA,EAAD,WACI,cAAC,IAAD,CAAgBC,SAAS,QAAQ7B,GAAI,CAAEL,MAAM,aAC7C,cAACI,EAAA,EAAD,CAAQ5C,KAAK,SAASuC,QAAQ,YAAYC,MAAM,YAAYmC,QAASN,EAArE,uBAEJ,sBAAM9C,UAAU,qBAAhB,SACI,eAACqD,EAAA,EAAD,CAAMC,WAAS,EAACxF,eAAe,SAASC,WAAW,SAASuD,GAAI,CAACiC,GAAI,IAArE,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,qBAAKC,IAAKC,EAAMC,IAAI,OAAO1F,OAAO,UAEtC,cAACoF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,uBAAMvD,YAAU,EAACC,aAAa,MAAMF,UAAU,qBAA9C,UACI,cAACqB,EAAA,EAAD,CAAQC,GAAI,CAAEsC,GAAI,EAAGC,SAAU,QAASV,SAAU,QAASC,QAAS,kBAAMxB,KAAmBZ,QAAQ,YAAYC,MAAM,YAAvH,SAAqIU,IACnID,EAASoC,aA3BZ,WACnB,MAAkDpC,EAASK,MAAnDkB,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,MAAOC,EAArC,EAAqCA,SACrC,OACI,qCACI,cAACxD,EAAA,EAAD,CAAWY,GAAI,CAAE6C,MAAO,SAAUvD,MAAOqC,EAAMxE,KAAK,OAAOuB,UAAU,sBAAsBe,MAAM,OAAOkC,KAAK,OAAOmB,UAAW3C,EAAYZ,SAAUA,EAAUG,QAAQ,WAAWC,MAAM,YAAYC,KAAK,QAAQC,OAAO,WACxN,cAACT,EAAA,EAAD,CAAWY,GAAI,CAAE6C,MAAO,SAAUvD,MAAOsD,EAAUzF,KAAK,OAAOuB,UAAU,sBAAsBe,MAAM,WAAWkC,KAAK,WAAWmB,UAAW3C,EAAYZ,SAAUA,EAAUG,QAAQ,WAAWC,MAAM,YAAYC,KAAK,QAAQC,OAAO,WACpO,cAACT,EAAA,EAAD,CAAWY,GAAI,CAAE6C,MAAO,SAAUvD,MAAOqD,EAAOxF,KAAK,OAAOuB,UAAU,sBAAsBe,MAAM,QAAQkC,KAAK,QAAQmB,UAAW3C,EAAYZ,SAAUA,EAAUG,QAAQ,WAAWC,MAAM,YAAYC,KAAK,QAAQC,OAAO,WAC3N,cAACT,EAAA,EAAD,CAAWY,GAAI,CAAE6C,MAAO,SAAUvD,MAAOmD,EAAOtF,KAAK,OAAOuB,UAAU,sBAAsBe,MAAM,QAAQkC,KAAK,QAAQmB,UAAW3C,EAAYZ,SAAUA,EAAUG,QAAQ,WAAWC,MAAM,YAAYC,KAAK,QAAQC,OAAO,WAC3N,cAACT,EAAA,EAAD,CAAWY,GAAI,CAAE6C,MAAO,SAAUvD,MAAOoD,EAASvF,KAAK,OAAOuB,UAAU,sBAAsBe,MAAM,UAAUkC,KAAK,UAAUmB,UAAW3C,EAAYZ,SAAUA,EAAUG,QAAQ,WAAWC,MAAM,YAAYC,KAAK,QAAQC,OAAO,cAmB3LkD,GAAmB,cAACC,EAAA,EAAD,CAAYtD,QAAQ,KAAKM,GAAI,CAAEL,MAAO,SAAtC,0DE3B1DsD,EArBO,WACpB,IAAM/F,EAAWa,cAOjB,OALAmF,qBAAU,WACR,ICCsB3C,EDApBrD,GCAoBqD,EDDL,6BCCqB,SAACrD,GACvCwD,MAAMH,GACDQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAN,GAAK,OAAIvD,EAjBU,SAACuD,GAC9B,MAAO,CACCtD,KAAM,sBACNF,QAASwD,GAcW0C,CAAkB1C,OACzCY,OAAM,SAAAhC,GAAK,OAAInC,EAXS,SAACmC,GAC9B,MAAO,CACHlC,KAAM,sBACNF,QAASoC,GAQgB+D,CAAkB/D,EAAMkC,kBDHpD,IAGD,cAAC,IAAD,UACI,eAAC8B,EAAA,EAAD,CAAerI,MAAOA,EAAtB,UACE,cAACsI,EAAA,EAAD,IACA,sBAAK5E,UAAU,MAAf,UACE,cAAC,IAAD,CAAO6E,UAAW3F,EAAW4F,KAAK,uBAAuBC,OAAK,IAC9D,cAAC,IAAD,CAAOF,UAAWrD,EAAasD,KAAK,8BAA8BC,OAAK,aEXpEC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCPRO,EAAe,CACjBhG,OAAO,EACPM,UAAU,GAoBC2F,EAjBO,WAA4C,IAA3C/F,EAA0C,uDAAlC8F,EAAcE,EAAoB,uCAC7D,OAAOA,EAAOjH,MACV,IAAK,kBACD,OAAO,2BACAiB,GADP,IAEIF,MAAOkG,EAAOnH,UAEtB,IAAK,qBACD,OAAO,2BACAmB,GADP,IAEII,SAAU4F,EAAOnH,UAEzB,QACI,OAAOmB,ICTJiG,EATW,WAAqC,IAApCjG,EAAmC,wDAApBgG,EAAoB,uCAC1D,MACS,qBADFA,EAAOjH,MAEEiB,EAEDA,GCLb8F,EAAe,CACjBhG,MAAO,GACPM,SAAU,IAoBC8F,EAjBU,WAA4C,IAA3ClG,EAA0C,uDAAlC8F,EAAcE,EAAoB,uCAChE,OAAOA,EAAOjH,MACV,IAAK,YACD,OAAO,2BACAiB,GADP,IAEIF,MAAOkG,EAAOnH,UAEtB,IAAK,eACD,OAAO,2BACAmB,GADP,IAEII,SAAU4F,EAAOnH,UAEzB,QACI,OAAOmB,ICnBb8F,EAAe,CACjB1B,cAAc,EACd/B,MAAO,IAmCI8D,EAhCK,WAAyC,IAAxCnG,EAAuC,uDAA/B8F,EAAcE,EAAiB,uCACxD,OAAOA,EAAOjH,MACV,IAAK,sBAUL,IAAK,qBACD,MAAO,CACHqF,cAAc,EACd/B,MAAO2D,EAAOnH,SARtB,IAAK,sBAUL,IAAK,qBACD,MAAO,CACHuF,cAAc,EACdnD,MAAO+E,EAAOnH,SAEtB,IAAK,eACD,MAAO,CACHuF,cAAc,EACd/B,MAAM,2BAAKrC,EAAMqC,OAAU2D,EAAOnH,UAE1C,QACI,OAAOmB,ICrBJoG,EAPKC,YAAgB,CAChCpG,UAAWiG,EACX/F,OAAQ4F,EACRhE,WAAYkE,EACZjE,SAAUmE,ICDRG,GAAQC,YAAYH,EAAa,GAAII,YAAgBC,MAE3DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BxB,M","file":"static/js/main.3bfc94e6.chunk.js","sourcesContent":["import { createTheme } from '@mui/material/styles';\nimport { indigo } from '@mui/material/colors';\nimport CrimeFighter from '../fonts/crimefighter-bb.regular.ttf';\n\nconst createFont = (fontName: string, fontWeight: number, fontUrl: string) => `\n  @font-face {\n    font-family: ${fontName};\n    font-style: normal;\n    font-display: swap;\n    font-weight: ${fontWeight};\n    src: local(${fontName}), url(${fontUrl}) format('opentype');\n    unicodeRange: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF;\n}`;\n\nexport const theme = createTheme({\n    palette: {\n      secondary: {\n        main: indigo[500],\n      },\n      text: {\n        primary: '#cacbd2',\n      },\n      mode: 'dark',\n    },\n    typography: {\n      fontFamily: ['CrimeFighter'].join(','),\n    },\n    components: {\n      MuiCssBaseline: {\n        styleOverrides: `\n        ${createFont('CrimeFighter', 400, CrimeFighter)}\n        `\n      },\n      MuiOutlinedInput: {\n        styleOverrides: {\n          notchedOutline: {\n            borderColor: '#3f51b5',\n          }\n        }\n      },\n      MuiAppBar: {\n        defaultProps: {\n          enableColorOnDark: true,\n        },\n        styleOverrides: {\n          root: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '10px',\n            height: '60px',\n            backgroundColor: '#0e114e'\n          }\n        }\n      },\n      MuiButton: {\n        styleOverrides: {\n          root: {\n            textTransform: 'none'\n          }\n        }\n      }\n    },\n  });","export default __webpack_public_path__ + \"static/media/crimefighter-bb.regular.65bff7ad.ttf\";","export const routes = {\n    loginPage: '/learn-ts-mui-redux/',\n    profilePage: '/learn-ts-mui-redux/profile'\n}","import { Dispatch } from \"redux\"\n\nexport const setLogin = (payload: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch({\n            type: 'SET_LOGIN',\n            payload\n        })\n    }\n}\n\nexport const setPassword = (payload: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch({\n            type: 'SET_PASSWORD',\n            payload\n        })\n    }\n}\n\nexport const setLoginError = (payload: boolean) => {\n    return (dispatch: Dispatch) => {\n        dispatch({\n            type: 'SET_LOGIN_ERROR',\n            payload\n        })\n    }\n}\n\nexport const setPasswordError = (payload: boolean) => {\n    return (dispatch: Dispatch) => {\n        dispatch({\n            type: 'SET_PASSWORD_ERROR',\n            payload\n        })\n    }\n}\n\nexport const toggleEditMode = () => {\n    return (dispatch: Dispatch) => {\n        dispatch({\n            type: 'TOGGLE_EDIT_MODE'\n        })\n    }\n}\n\nexport const editProfile = (payload: { [x: string]: string }) => {\n    return (dispatch: Dispatch) => {\n        dispatch({\n            type: 'EDIT_PROFILE',\n            payload\n        })\n    }\n}","import React from 'react'\nimport { Button, TextField } from '@mui/material'\nimport { useHistory } from 'react-router-dom';\nimport { routes } from '../routes';\nimport type { FormEvent } from 'react'\nimport { RootStateOrAny, useSelector, useDispatch} from 'react-redux'\nimport * as actionCreators from '../action-creators/index'\nimport { bindActionCreators } from 'redux';\n\nfunction hasDigits(str: string) {\n    return /\\d/.test(str);\n}\n\nfunction isEmptyOrSpaces(str: string): boolean {\n    return !str || str.indexOf(' ') >= 0\n}\n\nconst LoginPage: React.FC = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { setLogin, setPassword, setLoginError, setPasswordError } = bindActionCreators(actionCreators, dispatch)\n    const login = useSelector((state: RootStateOrAny) => state.loginForm.login);\n    const loginError = useSelector((state: RootStateOrAny) => state.errors.login);\n    const password = useSelector((state: RootStateOrAny) => state.loginForm.password);\n    const passwordError = useSelector((state: RootStateOrAny) => state.errors.password);\n    \n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setLoginError(false)\n        setPasswordError(false);\n\n        if (isEmptyOrSpaces(login)) {\n            setLoginError(true)\n        } else if (isEmptyOrSpaces(password) || password.length < 8 || !hasDigits(password)) {\n            setPasswordError(true)\n        } else {\n            history.push(routes.profilePage)\n        }\n      }\n\n    return (\n        <div className=\"login-page__main\">\n            <div className=\"login-page__container-main\">\n                <form noValidate autoComplete=\"off\" className=\"login-page__form\" onSubmit={(e: FormEvent<HTMLFormElement>) => handleSubmit(e)}>\n                    <TextField error={loginError} value={login} onChange={(e) => setLogin(e.target.value)} label=\"Login\" variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"dense\" required />\n                    <TextField type=\"password\" error={passwordError} value={password} onChange={(e) => setPassword(e.target.value)} label=\"Password\" variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"dense\" required />\n                    <Button className=\"login-page__btn\" sx={{ mt: 2 }} type=\"submit\" variant=\"contained\" color=\"secondary\">Login</Button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginPage\n","export default __webpack_public_path__ + \"static/media/Excalibur.b38d1984.png\";","import React from 'react'\nimport { Button, TextField, Typography, AppBar, Grid } from '@mui/material'\nimport { useHistory } from 'react-router-dom';\nimport { routes } from '../routes';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport { RootStateOrAny, useSelector, useDispatch} from 'react-redux'\nimport * as actionCreators from '../action-creators/index'\nimport { postData } from '../action-creators/postData';\nimport { bindActionCreators } from 'redux';\nimport lady from '../assets/images/Excalibur.png'\n\nconst ProfilePage: React.FC = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { toggleEditMode, editProfile } = bindActionCreators(actionCreators, dispatch);\n    const isEditable = useSelector((state: RootStateOrAny) => state.isEditable)\n    const userData = useSelector((state: RootStateOrAny) => state.userData)\n    let btnTitle = isEditable ? 'Finish Editing' : 'Edit'\n    \n    const editAndSaveData = () => {\n        toggleEditMode();\n\n        if (btnTitle === 'Finish Editing') {\n            dispatch(postData('http://localhost:3000/user', userData.users))\n        }\n    }\n\n    const clickHandler = React.useCallback(() => history.push(routes.loginPage), [history])\n    const onChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        editProfile({[e.target.name]: e.target.value })\n    }, [editProfile])\n\n    const showTextFields = () => {\n        const { name, email, website, phone, username } = userData.users;\n        return (\n            <>\n                <TextField sx={{ width: '300px'}} value={name} type='text' className=\"profile-page__field\" label='Name' name='name' disabled={!isEditable} onChange={onChange} variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"normal\"/>\n                <TextField sx={{ width: '300px'}} value={username} type='text' className=\"profile-page__field\" label='Username' name='username' disabled={!isEditable} onChange={onChange} variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"normal\"/>\n                <TextField sx={{ width: '300px'}} value={phone} type='text' className=\"profile-page__field\" label='Phone' name='phone' disabled={!isEditable} onChange={onChange} variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"normal\"/>\n                <TextField sx={{ width: '300px'}} value={email} type='text' className=\"profile-page__field\" label='Email' name='email' disabled={!isEditable} onChange={onChange} variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"normal\"/>\n                <TextField sx={{ width: '300px'}} value={website} type='text' className=\"profile-page__field\" label='Website' name='website' disabled={!isEditable} onChange={onChange} variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"normal\"/>\n            </>\n        )\n    }\n\n    return (\n        <div className=\"profile-page__container-main\">\n            <AppBar>\n                <AccountBoxIcon fontSize=\"large\" sx={{ color:'#ababc1'}} />\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\" onClick={clickHandler}>Logout</Button>\n            </AppBar>\n            <main className=\"profile-page__main\">\n                <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{pt: 10}}>\n                    <Grid item >\n                        <img src={lady} alt=\"Lady\" height='500' />\n                    </Grid>\n                    <Grid item>\n                        <form noValidate autoComplete=\"off\" className=\"profile-page__form\">\n                            <Button sx={{ mb: 2, minWidth: '100px', fontSize: '16px'}} onClick={() => editAndSaveData()} variant=\"contained\" color=\"secondary\">{ btnTitle }</Button>\n                            { userData.loadComplete ? showTextFields() : <Typography variant=\"h5\" sx={{ color: 'white' }}>Error. Could not load any data</Typography>}\n                        </form>\n                    </Grid>\n                </Grid>\n            </main>\n        </div>\n    )\n}\n\nexport default ProfilePage\n","import { Dispatch } from \"redux\"\n\nexport const addUsersSuccess = (users: object) => {\n    return {\n            type: 'POST_USERS_SUCCESS',\n            payload: users\n        }\n}\n\nexport const addUsersFailure = (error: any) => {\n    return {\n        type: 'POST_USERS_FAILURE',\n        payload: error\n    }\n}\n\nexport const postData = (url: string, body: object) => (dispatch: Dispatch) => {\n    fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n            'Content-type': 'application/json; charset=UTF-8'\n            }\n        })\n        .then(response => response.json())\n        .then(users => {\n            dispatch(addUsersSuccess(users))\n            console.log(users)\n        })\n        .catch(error => dispatch(addUsersFailure(error.message)))\n}\n\n","import React, { useEffect } from 'react';\nimport \"./assets/styles/reset.css\";\nimport \"./assets/styles/App.styles.scss\";\nimport { theme } from './assets/styles/theme'\nimport { CssBaseline, ThemeProvider } from '@mui/material';\nimport { BrowserRouter, Route } from 'react-router-dom'; \nimport LoginPage from './pages/LoginPage';\nimport ProfilePage from './pages/ProfilePage';\nimport { useDispatch} from 'react-redux'\nimport { fetchData } from './action-creators/fetchData';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const localUrl = 'http://localhost:3000/user';\n      dispatch(fetchData(localUrl));\n  }, [])\n  \n  return (\n    <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <div className=\"App\">\n            <Route component={LoginPage} path=\"/learn-ts-mui-redux/\" exact />\n            <Route component={ProfilePage} path=\"/learn-ts-mui-redux/profile\" exact />\n          </div>\n        </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { Dispatch } from \"redux\"\n\nexport const fetchUsersSuccess = (users: object) => {\n    return {\n            type: 'FETCH_USERS_SUCCESS',\n            payload: users\n        }\n}\n\nexport const fetchUsersFailure = (error: any) => {\n    return {\n        type: 'FETCH_USERS_FAILURE',\n        payload: error\n    }\n}\n\nexport const fetchData = (url: string) => (dispatch: Dispatch) => {\n    fetch(url)\n        .then(response => response.json())\n        .then(users => dispatch(fetchUsersSuccess(users)))\n        .catch(error => dispatch(fetchUsersFailure(error.message)))\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Action } from \"../interfaces\"\n\nconst initialState = {\n    login: false,\n    password: false\n}\n\nconst errorsReducer = (state = initialState, action : Action) => {\n    switch(action.type) {\n        case 'SET_LOGIN_ERROR':\n            return {\n                ...state,\n                login: action.payload\n            }\n        case 'SET_PASSWORD_ERROR':\n            return {\n                ...state,\n                password: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default errorsReducer;","import { Action } from \"../interfaces\"\n\nconst isEditableReducer = (state = false, action : Action) => {\n    switch(action.type) {\n        case 'TOGGLE_EDIT_MODE':\n            return !state\n        default:\n            return state\n    }\n}\n\nexport default isEditableReducer;","import { Action } from \"../interfaces\"\n\nconst initialState = {\n    login: '',\n    password: '',\n}\n\nconst loginFormReducer = (state = initialState, action : Action) => {\n    switch(action.type) {\n        case 'SET_LOGIN':\n            return {\n                ...state,\n                login: action.payload\n            }\n        case 'SET_PASSWORD':\n            return {\n                ...state,\n                password: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default loginFormReducer;","\nconst initialState = {\n    loadComplete: false,\n    users: {},\n}\n\nconst userReducer = (state = initialState, action : any) => {\n    switch(action.type) {\n        case 'FETCH_USERS_SUCCESS':\n            return {\n                loadComplete: true,\n                users: action.payload,\n            }\n        case 'FETCH_USERS_FAILURE':\n            return {\n                loadComplete: false,\n                error: action.payload\n            }\n        case 'POST_USERS_SUCCESS':\n            return {\n                loadComplete: true,\n                users: action.payload,\n            }\n        case 'POST_USERS_FAILURE':\n            return {\n                loadComplete: false,\n                error: action.payload\n            }\n        case 'EDIT_PROFILE':\n            return {\n                loadComplete: true,\n                users: {...state.users, ...action.payload}\n            }\n        default:\n            return state\n    }\n}\n\nexport default userReducer;","import { combineReducers } from 'redux'\nimport errorsReducer from './errorsReducer';\nimport isEditableReducer from './isEditableReducer';\nimport loginFormReducer from './loginFormReducer';\nimport userReducer from './userReducer';\n\nconst allReducers = combineReducers({\n    loginForm: loginFormReducer,\n    errors: errorsReducer,\n    isEditable: isEditableReducer,\n    userData: userReducer\n})\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport allReducers from './reducers/index'\n\nconst store = createStore(allReducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}