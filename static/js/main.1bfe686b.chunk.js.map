{"version":3,"sources":["pages/LoginPage.tsx","components/CustomTextField.tsx","pages/ProfilePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["hasWhiteSpace","str","indexOf","hasDigits","test","LoginPage","history","useHistory","useState","login","setLogin","password","setPassword","loginError","setLoginError","passwordError","setPasswordError","className","noValidate","autoComplete","onSubmit","e","preventDefault","length","console","log","push","handleSubmit","TextField","error","value","onChange","target","id","label","variant","color","size","margin","required","Button","sx","mt","type","CustomTextField","disabled","name","changeHandler","defaultValue","ProfilePage","btnTitle","editDisabled","setEditDisabled","surname","age","occupation","phone","fieldValue","setFieldValue","handleChange","fontSize","height","onClick","Container","mb","theme","createTheme","palette","secondary","main","indigo","text","primary","App","ThemeProvider","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAKA,SAASA,EAAcC,GACnB,OAAOA,EAAIC,QAAQ,MAAQ,EAG/B,SAASC,EAAUF,GACf,MAAO,KAAKG,KAAKH,GAGrB,IA0CeI,EA1Ca,WACxB,IAAMC,EAAUC,cAChB,EAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAiB,IAAjD,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAkB,GAAtD,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0CN,oBAAkB,GAA5D,mBAAOO,EAAP,KAAsBC,EAAtB,KAwBA,OACI,qBAAKC,UAAU,mBAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,uBAAMC,YAAU,EAACC,aAAa,MAAMF,UAAU,mBAAmBG,SAAU,SAACC,GAAD,OAzBlE,SAACA,GAClBA,EAAEC,iBACFR,GAAc,GACdE,GAAiB,GAEH,KAAVP,EACAK,GAAc,GACM,KAAbH,EACPK,GAAiB,GACVhB,EAAcS,GACrBK,GAAc,GACPd,EAAcW,GACrBK,GAAiB,GACVL,EAASY,OAAS,IAAMpB,EAAUQ,IACzCa,QAAQC,IAAId,EAASY,OAAS,EAAG,0BACjCC,QAAQC,KAAKtB,EAAUQ,GAAW,2BAClCK,GAAiB,IAEjBV,EAAQoB,KAAK,+BAOqGC,CAAaN,IAA3H,UACI,cAACO,EAAA,EAAD,CAAWC,MAAOhB,EAAYiB,MAAOrB,EAAOsB,SAAU,SAACV,GAAD,OAAOX,EAASW,EAAEW,OAAOF,QAAQG,GAAG,iBAAiBC,MAAM,QAAQC,QAAQ,WAAWC,MAAM,YAAYC,KAAK,QAAQC,OAAO,QAAQC,UAAQ,IAClM,cAACX,EAAA,EAAD,CAAWC,MAAOd,EAAee,MAAOnB,EAAUoB,SAAU,SAACV,GAAD,OAAOT,EAAYS,EAAEW,OAAOF,QAAQG,GAAG,iBAAiBC,MAAM,WAAWC,QAAQ,WAAWC,MAAM,YAAYC,KAAK,QAAQC,OAAO,QAAQC,UAAQ,IAC9M,cAACC,EAAA,EAAD,CAAQvB,UAAU,kBAAkBwB,GAAI,CAAEC,GAAI,GAAKC,KAAK,SAASR,QAAQ,YAAYC,MAAM,YAA3F,2B,wBC/BLQ,EAN0B,SAAC,GAAoD,IAAlDd,EAAiD,EAAjDA,MAAOe,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,KAAMH,EAA0B,EAA1BA,KAAMI,EAAoB,EAApBA,cACrE,OACI,cAACnB,EAAA,EAAD,CAAWoB,aAAclB,EAAOa,KAAMA,EAAM1B,UAAU,sBAAsBgB,GAAG,iBAAiBC,MAAOY,EAAMX,QAAQ,WAAWC,MAAM,UAAUC,KAAK,QAAQC,OAAO,SAASO,SAAUA,EAAUC,KAAMA,EAAMf,SAAUgB,K,iBC4ChNE,EAnDe,WAC1B,IAGIC,EAHE5C,EAAUC,cAChB,EAAwCC,oBAAkB,GAA1D,mBAAO2C,EAAP,KAAqBC,EAArB,KAGeF,EAAfC,EAA0B,OAAoB,iBAU9C,MAAoC3C,mBAAkB,CAClDsC,KAAM,QACNO,QAAS,OACTC,IAAK,GACLC,WAAY,QACZC,MAAO,QALX,mBAAOC,EAAP,KAAmBC,EAAnB,KASMC,EAAe,SAACtC,GAClBqC,EAAc,2BAAKD,GAAN,kBAAmBpC,EAAEW,OAAOc,KAAOzB,EAAEW,OAAOF,UAG7D,OACI,qCACI,yBAAQb,UAAU,uBAAlB,UACI,cAAC,IAAD,CAAgB2C,SAAS,QAAQnB,GAAI,CAAEL,MAAM,UAC7C,cAACI,EAAA,EAAD,CAAQC,GAAI,CAAEoB,OAAQ,eAAiBlB,KAAK,SAASR,QAAQ,YAAY2B,QAAS,kBAAMxD,EAAQoB,KAAK,yBAArG,uBAEJ,sBAAMT,UAAU,qBAAhB,SACI,cAAC8C,EAAA,EAAD,CAAW9C,UAAU,8BAArB,SACI,uBAAMC,YAAU,EAACC,aAAa,MAAMF,UAAU,qBAA9C,UACI,cAACuB,EAAA,EAAD,CAAQC,GAAI,CAAEuB,GAAI,GAAK7B,QAAQ,YAAY2B,QAAS,kBAd/CV,GAAiBD,IActB,SAA0ED,IAC1E,cAAC,EAAD,CAAiBpB,MAAO2B,EAAWX,KAAMH,KAAK,OAAOE,SAAUM,EAAcL,KAAM,OAAQC,cAAe,SAAC1B,GAAD,OAAOsC,EAAatC,MAC9H,cAAC,EAAD,CAAiBS,MAAO2B,EAAWJ,QAASV,KAAK,OAAOE,SAAUM,EAAcL,KAAM,UAAWC,cAAe,SAAC1B,GAAD,OAAOsC,EAAatC,MACpI,cAAC,EAAD,CAAiBS,MAAO2B,EAAWH,IAAKX,KAAK,SAASE,SAAUM,EAAcL,KAAM,MAAOC,cAAe,SAAC1B,GAAD,OAAOsC,EAAatC,MAC9H,cAAC,EAAD,CAAiBS,MAAO2B,EAAWF,WAAYZ,KAAK,OAAOE,SAAUM,EAAcL,KAAM,aAAcC,cAAe,SAAC1B,GAAD,OAAOsC,EAAatC,MAC1I,cAAC,EAAD,CAAiBS,MAAO2B,EAAWD,MAAOb,KAAK,SAASE,SAAUM,EAAcL,KAAM,QAASC,cAAe,SAAC1B,GAAD,OAAOsC,EAAatC,iBCtCpJ4C,EAAQC,YAAY,CACxBC,QAAS,CACPC,UAAW,CACTC,KAAMC,IAAO,MAEfC,KAAM,CACJC,QAASF,IAAO,SAmBPG,EAdO,WAEpB,OACE,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,CAAeT,MAAOA,EAAtB,SACE,sBAAKhD,UAAU,MAAf,UACE,cAAC,IAAD,CAAO0D,UAAWtE,EAAWuE,KAAK,uBAAuBC,OAAK,IAC9D,cAAC,IAAD,CAAOF,UAAW1B,EAAa2B,KAAK,8BAA8BC,OAAK,YCdlEC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1bfe686b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Button, TextField } from '@mui/material'\nimport { useHistory } from 'react-router-dom';\nimport type { FormEvent } from 'react'\n\nfunction hasWhiteSpace(str: string) {\n    return str.indexOf(' ') >= 0;\n}\n\nfunction hasDigits(str: string) {\n    return /\\d/.test(str);\n}\n\nconst LoginPage: React.FC = () => {\n    const history = useHistory();\n    const [login, setLogin] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [loginError, setLoginError] = useState<boolean>(false);\n    const [passwordError, setPasswordError] = useState<boolean>(false);\n\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setLoginError(false);\n        setPasswordError(false);\n        \n        if (login === '') {\n            setLoginError(true);\n        } else if (password === '') {\n            setPasswordError(true);\n        } else if (hasWhiteSpace(login)) {\n            setLoginError(true);\n        } else if (hasWhiteSpace(password)) {\n            setPasswordError(true);\n        } else if (password.length < 8 || !hasDigits(password)) {\n            console.log(password.length < 8, 'Less than 8 characters')\n            console.log(!hasDigits(password), 'Does not contain digits')\n            setPasswordError(true);\n        } else {\n            history.push('/learn-ts-mui-redux/profile')\n        }\n      } \n\n    return (\n        <div className=\"login-page__main\">\n            <div className=\"login-page__container-main\"> \n                <form noValidate autoComplete=\"off\" className=\"login-page__form\" onSubmit={(e: FormEvent<HTMLFormElement>) => handleSubmit(e)}>\n                    <TextField error={loginError} value={login} onChange={(e) => setLogin(e.target.value)} id=\"outlined-basic\" label=\"Login\" variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"dense\" required />\n                    <TextField error={passwordError} value={password} onChange={(e) => setPassword(e.target.value)} id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" color=\"secondary\" size=\"small\" margin=\"dense\" required />\n                    <Button className=\"login-page__btn\" sx={{ mt: 2 }} type=\"submit\" variant=\"contained\" color=\"secondary\">Login</Button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginPage\n","import React from 'react'\nimport { TextField } from '@mui/material'\n\ninterface Field {\n    value: string | number,\n    disabled: boolean,\n    name: string,\n    type: string,\n    changeHandler: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n}\n\nconst CustomTextField: React.FC<Field> = ({ value, disabled, name, type, changeHandler }) => {\n    return (\n        <TextField defaultValue={value} type={type} className=\"profile-page__field\" id=\"outlined-basic\" label={name} variant=\"outlined\" color=\"primary\" size=\"small\" margin=\"normal\" disabled={disabled} name={name} onChange={changeHandler}/>\n    )\n}\n\nexport default CustomTextField\n","import React, { useState } from 'react'\nimport { Container, Button, Typography } from '@mui/material'\nimport { useHistory } from 'react-router-dom';\nimport CustomTextField from '../components/CustomTextField';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\n\nconst ProfilePage: React.FC = () => {\n    const history = useHistory();\n    const [editDisabled, setEditDisabled] = useState<boolean>(true);\n\n    let btnTitle;\n    editDisabled ? btnTitle = 'Edit' : btnTitle = 'Finish Editing'\n\n    interface Profile {\n        name: string,\n        surname: string,\n        age: number,\n        occupation: string,\n        phone: string;\n    }\n\n    const [fieldValue, setFieldValue] = useState<Profile>({\n        name: 'James',\n        surname: \"Bond\",\n        age: 42,\n        occupation: 'Agent',\n        phone: '007',\n    })\n\n    const editFields = () => setEditDisabled(!editDisabled);\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setFieldValue({ ...fieldValue, [e.target.name]: e.target.value })\n}\n    \n    return (\n        <>\n            <header className=\"profile-page__header\">\n                <AccountBoxIcon fontSize=\"large\" sx={{ color:\"#fff\"}} />\n                <Button sx={{ height: 'max-content' }} type=\"submit\" variant=\"contained\" onClick={() => history.push('/learn-ts-mui-redux/')}>Logout</Button>\n            </header>\n            <main className=\"profile-page__main\">\n                <Container className=\"profile-page__customer-info\">\n                    <form noValidate autoComplete=\"off\" className=\"profile-page__form\">\n                        <Button sx={{ mb: 2 }} variant=\"contained\" onClick={() => editFields()}>{ btnTitle }</Button>\n                        <CustomTextField value={fieldValue.name} type='text' disabled={editDisabled} name={'Name'} changeHandler={(e) => handleChange(e)}/>\n                        <CustomTextField value={fieldValue.surname} type='text' disabled={editDisabled} name={'Surname'} changeHandler={(e) => handleChange(e)}/>\n                        <CustomTextField value={fieldValue.age} type='number' disabled={editDisabled} name={'Age'} changeHandler={(e) => handleChange(e)}/>\n                        <CustomTextField value={fieldValue.occupation} type='text' disabled={editDisabled} name={'Occupation'} changeHandler={(e) => handleChange(e)}/>\n                        <CustomTextField value={fieldValue.phone} type='number' disabled={editDisabled} name={'Phone'} changeHandler={(e) => handleChange(e)}/>\n                        {/* { Object.entries(fieldValue).map(([key, val], idx) => <TextField defaultValue={val} className=\"profile-page__field\" id=\"outlined-basic\" label={key.toUpperCase()} variant=\"outlined\" color=\"primary\" size=\"small\" margin=\"normal\" key={idx} disabled={editDisabled} name={key} onChange={(e) => handleChange(e)}/>) } */}\n                    </form>\n                </Container>\n            </main>\n        </>\n    )\n}\n\nexport default ProfilePage\n","import React from 'react';\nimport \"./reset.css\";\nimport \"./App.styles.scss\";\nimport { createTheme } from '@mui/material/styles';\nimport { indigo} from '@mui/material/colors';\nimport { ThemeProvider } from '@mui/material';\nimport { BrowserRouter, Route } from 'react-router-dom'; \nimport LoginPage from './pages/LoginPage';\nimport ProfilePage from './pages/ProfilePage';\n\nconst theme = createTheme({\n  palette: {\n    secondary: {\n      main: indigo[500],\n    },\n    text: {\n      primary: indigo[500],\n    }\n  }\n});\n\nconst App: React.FC = () => {\n  \n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Route component={LoginPage} path=\"/learn-ts-mui-redux/\" exact />\n          <Route component={ProfilePage} path=\"/learn-ts-mui-redux/profile\" exact />\n        </div>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}